.version sol 0.61.2

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 128
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 128
LDU 32
LDU 32
ROTREV
PAIR
SWAP
LDU 64
LDU 64
LDU 16
LDU 16
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 128
LDU 128
LDU 128
ROTREV
PAIR
SWAP
LDREF
ENDS
CTOS
LDU 128
LDU 128
ROTREV
PAIR
SWAP
LDU 128
LDU 128
ROTREV
PAIR
SWAP
LDU 128
LDU 128
ROTREV
PAIR
SWAP
LDU 128
LDREF
ENDS
CTOS
LDU 128
ROTREV
PAIR
SWAP
ROLLREV 6
TUPLE 6
SWAP
ENDS
.loc ../contracts/AuctionTip3.sol, 100
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
GETGLOB 9
GETGLOB 12
SDEQ
AND
DUP
PUSHCONT {
	DROP
	GETGLOB 9
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	OVER
	THIRD
	CALLREF {
		CALL $calcValue_internal_macro$
	}
	GEQ
}
IF
PUSHCONT {
	.loc ../contracts/AuctionTip3.sol, 105
	CALLREF {
		CALL $_reserve_internal_macro$
	}
	.loc ../contracts/AuctionTip3.sol, 106
	BLKPUSH 5, 13
	CALLREF {
		CALL $setDefaultProperties_internal_macro$
	}
	.loc ../contracts/AuctionTip3.sol, 113
	PUSH S7
	SETGLOB 21
	.loc ../contracts/AuctionTip3.sol, 114
	PUSH S8
	SETGLOB 20
	.loc ../contracts/AuctionTip3.sol, 115
	BLKPUSH 2, 8
	ADD
	UFITS 64
	SETGLOB 22
	.loc ../contracts/AuctionTip3.sol, 116
	PUSHINT 0
	SETGLOB 26
	.loc ../contracts/AuctionTip3.sol, 117
	PUSH S6
	SETGLOB 23
	.loc ../contracts/AuctionTip3.sol, 118
	PUSH S5
	SETGLOB 24
	.loc ../contracts/AuctionTip3.sol, 119
	GETGLOB 13
	SETGLOB 27
	.loc ../contracts/AuctionTip3.sol, 120
	PUSH S4
	SETGLOB 18
	.loc ../contracts/AuctionTip3.sol, 121
	PUSH S2
	SETGLOB 30
	.loc ../contracts/AuctionTip3.sol, 122
	OVER
	SETGLOB 31
	.loc ../contracts/AuctionTip3.sol, 123
	DUP
	PUSHINT 32
	SETGLOBVAR
	.loc ../contracts/AuctionTip3.sol, 125
	CALLREF {
		CALL $buildInfo_internal_macro$
	}
	PUSHSLICE xc0000000000000000000000001
	NEWC
	STSLICE
	SWAP
	NEWC
	STSLICECONST x162d6786
	SWAP
	UNTUPLE 10
	REVERSE 11, 0
	STSLICE
	ROLLREV 9
	NEWC
	STSLICE
	ROLLREV 8
	NEWC
	STSLICE
	ROLLREV 7
	NEWC
	STSLICE
	STU 64
	STU 64
	STU 64
	STU 128
	STU 64
	STU 8
	STBREFR
	STBREFR
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
	.loc ../contracts/AuctionTip3.sol, 126
	PUSHINT 0
	SETGLOB 28
	.loc ../contracts/AuctionTip3.sol, 127
	GETGLOB 29
	INC
	UFITS 32
	SETGLOB 29
	.loc ../contracts/AuctionTip3.sol, 129
	PUSHINT 120000000
	MYADDR
	PUSHINT 32
	GETGLOBVAR
	SECOND
	CALLREF {
		CALL $calcValue_internal_macro$
	}
	GETGLOB 18
	NEWC
	STSLICECONST x62_
	STSLICE
	SWAP
	STGRAMS
	PUSHINT 1
	STUR 107
	ROTREV
	PUSHSLICE x31edd4c749b2f6d7
	NEWC
	STSLICE
	STSLICE
	STU 128
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
	.loc ../contracts/AuctionTip3.sol, 138
	PUSH S3
	NEWC
	STSLICECONST x42_
	STSLICE
	PUSHINT 111
	STZEROES
	ENDC
	PUSHINT 130
}
PUSHCONT {
	.loc ../contracts/AuctionTip3.sol, 140
	GETGLOB 9
	NEWC
	STSLICECONST x42_
	STSLICE
	PUSHINT 111
	STZEROES
	ENDC
	PUSHINT 160
}
IFELSE
SENDRAWMSG
.loc ../contracts/AuctionTip3.sol, 0
BLKDROP 14
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onTokenWallet
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/AuctionTip3.sol, 144
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/AuctionTip3.sol, 0
CALLREF {
	CALL $onTokenWallet_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onTokenWallet_internal_macro
.loc ../contracts/AuctionTip3.sol, 145
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
GETGLOB 9
GETGLOB 18
SDEQ
AND
THROWIFNOT 108
.loc ../contracts/AuctionTip3.sol, 150
CALLREF {
	CALL $_reserve_internal_macro$
}
.loc ../contracts/AuctionTip3.sol, 151
SETGLOB 19
.loc ../contracts/AuctionTip3.sol, 152
CALLREF {
	CALL $buildInfo_internal_macro$
}
PUSHSLICE xc0000000000000000000000001
NEWC
STSLICE
SWAP
NEWC
STSLICECONST x5144886a
SWAP
UNTUPLE 10
REVERSE 11, 0
STSLICE
ROLLREV 9
NEWC
STSLICE
ROLLREV 8
NEWC
STSLICE
ROLLREV 7
NEWC
STSLICE
STU 64
STU 64
STU 64
STU 128
STU 64
STU 8
STBREFR
STBREFR
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/AuctionTip3.sol, 153
PUSHINT 1
SETGLOB 28
.loc ../contracts/AuctionTip3.sol, 154
GETGLOB 15
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHINT 130
SENDRAWMSG
.loc ../contracts/AuctionTip3.sol, 0

.globl	_reserve_internal
.type	_reserve_internal, @function
CALL $_reserve_internal_macro$

.macro _reserve_internal_macro
.loc ../contracts/AuctionTip3.sol, 158
PUSHINT 150000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/AuctionTip3.sol, 0

.globl	calcValue_internal
.type	calcValue_internal, @function
CALL $calcValue_internal_macro$

.macro calcValue_internal_macro
.loc ../contracts/AuctionTip3.sol, 162
DUP
FIRST
SWAP
SECOND
MYADDR
PARSEMSGADDR
THIRD
CALLREF {
	CALL $__gasToTon_macro$
}
ADD
UFITS 128
.loc ../contracts/AuctionTip3.sol, 0

.macro getTypeContract
DROP
GETGLOB 6
THROWIFNOT 76
.loc ../contracts/AuctionTip3.sol, 165
ENDS
.loc ../contracts/AuctionTip3.sol, 0
CALLREF {
	CALL $getTypeContract_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2568476738
	STUR 130
	STREF
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getTypeContract_internal_macro
.loc ../contracts/AuctionTip3.sol, 166
PUSHREF {
	.blob x41756374696f6e
}
.loc ../contracts/AuctionTip3.sol, 0

.macro onAcceptTokensTransfer
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/AuctionTip3.sol, 169
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDU 128
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
.loc ../contracts/AuctionTip3.sol, 0
CALLREF {
	CALL $onAcceptTokensTransfer_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onAcceptTokensTransfer_internal_macro
.loc ../contracts/AuctionTip3.sol, 177
CALLREF {
	CALL $_reserve_internal_macro$
}
.loc ../contracts/AuctionTip3.sol, 179
PUSHINT 0
.loc ../contracts/AuctionTip3.sol, 180
PUSH S4
.loc ../contracts/AuctionTip3.sol, 181
ROT
CTOS
.loc ../contracts/AuctionTip3.sol, 182
DUP
SBITS
GTINT 31
PUSHCONT {
	.loc ../contracts/AuctionTip3.sol, 183
	DUP
	LDU 32
	POP S2
	POP S3
	.loc ../contracts/AuctionTip3.sol, 0
}
IF
.loc ../contracts/AuctionTip3.sol, 185
DUP
SBITS
PUSHINT 267
GEQ
PUSHCONT {
	.loc ../contracts/AuctionTip3.sol, 186
	LDMSGADDR
	BLKDROP2 1, 2
	.loc ../contracts/AuctionTip3.sol, 0
}
IF
.loc ../contracts/AuctionTip3.sol, 188
DROP
DEPTH
ADDCONST -2
PICK
PUSHINT 32
GETGLOBVAR
INDEX 4
CALLREF {
	CALL $calcValue_internal_macro$
}
GEQ
PUSH S6
GETGLOB 27
GEQ
GETGLOB 9
GETGLOB 19
SDEQ
AND
AND
DUP
PUSHCONT {
	DROP
	GETGLOB 9
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	NEQINT 0
	GETGLOB 18
	PUSH S8
	SDEQ
	NOW
	GETGLOB 22
	LESS
	NOW
	GETGLOB 20
	GEQ
	GETGLOB 28
	EQINT 1
	PUSH S9
	GETGLOB 15
	SDEQ
	NOT
	AND
	AND
	AND
	AND
	AND
}
IF
PUSHCONT {
	.loc ../contracts/AuctionTip3.sol, 199
	DUP2
	PUSH2 S7, S4
	CALLREF {
		CALL $processBid_internal_macro$
	}
}
PUSHCONT {
	.loc ../contracts/AuctionTip3.sol, 201
	PUSH2 S5, S0
	PUSHSLICE xc000000000000000000000000068138a8c
	NEWC
	STSLICE
	STSLICE
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
	.loc ../contracts/AuctionTip3.sol, 202
	DUP2
	FALSE
	DUP
	GETGLOB 11
	CALLREF {
		CALL $sendBidResultCallback_internal_macro$
	}
	.loc ../contracts/AuctionTip3.sol, 205
	PUSH3 S5, S0, S2
	GETGLOB 9
	PUSHINT 0
	PUSHPOW2 7
	PUSHINT 0
	PUSHREF {
	}
	CALLREF {
		CALL $_transfer_internal_macro$
	}
}
IFELSE
.loc ../contracts/AuctionTip3.sol, 0
BLKDROP 7

.globl	processBid_internal
.type	processBid_internal, @function
CALL $processBid_internal_macro$

.macro processBid_internal_macro
.loc ../contracts/AuctionTip3.sol, 215
GETGLOB 25
.loc ../contracts/AuctionTip3.sol, 216
OVER2
PAIR
.loc ../contracts/AuctionTip3.sol, 217
PUSH S3
SETGLOB 26
.loc ../contracts/AuctionTip3.sol, 218
SETGLOB 25
.loc ../contracts/AuctionTip3.sol, 219
CALLREF {
	CALL $calculateAndSetNextBid_internal_macro$
}
.loc ../contracts/AuctionTip3.sol, 221
GETGLOB 27
ROLL 3
PUSH S4
PUSHSLICE xc00000000000000000000000002d21387e
NEWC
STSLICE
STSLICE
STU 128
STU 128
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/AuctionTip3.sol, 222
PUSH S3
ROLL 3
TRUE
GETGLOB 27
GETGLOB 11
CALLREF {
	CALL $sendBidResultCallback_internal_macro$
}
.loc ../contracts/AuctionTip3.sol, 225
DUP
SECOND
GTINT 0
PUSHCONT {
	.loc ../contracts/AuctionTip3.sol, 226
	GETGLOB 11
	GETGLOB 25
	SECOND
	GETGLOB 25
	FIRST
	PUSH2 S5, S3
	FIRST
	FALSE
	NEWC
	STSLICECONST x6_
	STI 1
	STSLICECONST x1_
	STSLICE
	PUSHINT 2803819077499249229031122585109857988247553
	STUR 143
	ROLLREV 4
	NEWC
	STSLICECONST x4e9c390d
	STU 32
	STSLICE
	STU 128
	SWAP
	NEWC
	STSLICE
	STBREFR
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
	.loc ../contracts/AuctionTip3.sol, 238
	PUSH S2
	NEWC
	STU 32
	.loc ../contracts/AuctionTip3.sol, 239
	GETGLOB 25
	FIRST
	STSLICER
	.loc ../contracts/AuctionTip3.sol, 240
	GETGLOB 25
	SECOND
	STUR 128
	.loc ../contracts/AuctionTip3.sol, 241
	OVER
	SECOND
	PUSH S2
	FIRST
	PUSH S4
	GETGLOB 9
	PUSHINT 0
	PUSHPOW2 7
	PUSHINT 0
	ROLL 7
	ENDC
	CALLREF {
		CALL $_transfer_internal_macro$
	}
}
PUSHCONT {
	.loc ../contracts/AuctionTip3.sol, 244
	OVER
	NEWC
	STSLICECONST x42_
	STSLICE
	PUSHINT 111
	STZEROES
	ENDC
	PUSHPOW2 7
	SENDRAWMSG
}
IFELSE
.loc ../contracts/AuctionTip3.sol, 0
BLKDROP 3

.globl	_transfer_internal
.type	_transfer_internal, @function
CALL $_transfer_internal_macro$

.macro _transfer_internal_macro
.loc ../contracts/AuctionTip3.sol, 250
PUSH S5
NEWC
STSLICE
.loc ../contracts/AuctionTip3.sol, 252
GETGLOB 18
GETGLOB 31
SDEQ
PUSHCONT {
	.loc ../contracts/AuctionTip3.sol, 253
	DUP
	ENDC
	TRUE
	PUSH S9
	PUSHINT 0
	GETGLOB 30
}
PUSHCONT {
	.loc ../contracts/AuctionTip3.sol, 262
	OVER
	FALSE
	PUSH3 S8, S4, S9
}
IFELSE
PUSH3 S13, S9, S10
FALSE
NEWC
STSLICECONST x6_
STI 1
STSLICECONST x1_
STSLICE
SWAP
STGRAMS
PUSHINT 1
STUR 107
ROLLREV 6
NEWC
STSLICECONST x73e22143
STU 128
STSLICE
STU 128
ROLLREV 3
NEWC
STSLICE
STI 1
STREF
STBREFR
STBREFR
ENDC
PUSH S4
SENDRAWMSG
.loc ../contracts/AuctionTip3.sol, 0
BLKDROP 9

.macro onAcceptTokensBurn
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/AuctionTip3.sol, 273
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 128
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
.loc ../contracts/AuctionTip3.sol, 0
CALLREF {
	CALL $onAcceptTokensBurn_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onAcceptTokensBurn_internal_macro
.loc ../contracts/AuctionTip3.sol, 280
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
.loc ../contracts/AuctionTip3.sol, 281
SWAP
CTOS
.loc ../contracts/AuctionTip3.sol, 282
DUP
SBITS
PUSHINT 267
GEQ
PUSHCONT {
	.loc ../contracts/AuctionTip3.sol, 283
	LDMSGADDR
	BLKDROP2 1, 2
	.loc ../contracts/AuctionTip3.sol, 0
}
IF
.loc ../contracts/AuctionTip3.sol, 285
DROP
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
GETGLOB 9
GETGLOB 31
SDEQ
AND
THROWIFNOT 111
.loc ../contracts/AuctionTip3.sol, 286
CALLREF {
	CALL $_reserve_internal_macro$
}
.loc ../contracts/AuctionTip3.sol, 288
DUP2
SDEQ
PUSHCONT {
	.loc ../contracts/AuctionTip3.sol, 289
	OVER
}
PUSHCONT {
	.loc ../contracts/AuctionTip3.sol, 291
	PUSH2 S4, S1
	NEWC
	STSLICECONST x42_
	STSLICE
	SWAP
	STGRAMS
	PUSHINT 107
	STZEROES
	ENDC
	PUSHINT 1
	SENDRAWMSG
	.loc ../contracts/AuctionTip3.sol, 292
	DUP
}
IFELSE
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHINT 130
SENDRAWMSG
.loc ../contracts/AuctionTip3.sol, 0
BLKDROP 5

.macro finishAuction
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/AuctionTip3.sol, 296
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDU 32
ENDS
.loc ../contracts/AuctionTip3.sol, 0
CALLREF {
	CALL $finishAuction_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	finishAuction_internal
.type	finishAuction_internal, @function
CALL $finishAuction_internal_macro$

.macro finishAuction_internal_macro
.loc ../contracts/AuctionTip3.sol, 300
NOW
GETGLOB 22
GEQ
THROWIFNOT 250
.loc ../contracts/AuctionTip3.sol, 301
GETGLOB 28
EQINT 1
THROWIFNOT 253
.loc ../contracts/AuctionTip3.sol, 302
DEPTH
ADDCONST -2
PICK
PUSHINT 32
GETGLOBVAR
INDEX 5
CALLREF {
	CALL $calcValue_internal_macro$
}
GEQ
THROWIFNOT 104
.loc ../contracts/AuctionTip3.sol, 303
NEWDICT
.loc ../contracts/AuctionTip3.sol, 304
GETGLOB 26
GETGLOB 13
GEQ
PUSHCONT {
	.loc ../contracts/AuctionTip3.sol, 305
	CALLREF {
		CALL $_reserve_internal_macro$
	}
	.loc ../contracts/AuctionTip3.sol, 306
	GETGLOB 26
	GETGLOB 17
	FIRST
	GETGLOB 17
	SECOND
	MULDIVC
	UFITS 128
	.loc ../contracts/AuctionTip3.sol, 307
	GETGLOB 26
	OVER
	SUB
	UFITS 128
	.loc ../contracts/AuctionTip3.sol, 309
	GETGLOB 26
	GETGLOB 25
	FIRST
	GETGLOB 15
	PUSHSLICE xc0000000000000000000000001
	NEWC
	STSLICE
	ROLLREV 3
	NEWC
	STSLICECONST x5f006db4
	STSLICE
	ROTREV
	NEWC
	STSLICE
	STU 128
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
	.loc ../contracts/AuctionTip3.sol, 310
	PUSHINT 2
	SETGLOB 28
	.loc ../contracts/AuctionTip3.sol, 312
	GETGLOB 11
	PUSH S4
	GETGLOB 9
	FALSE
	NEWC
	STSLICECONST x6_
	STI 1
	STSLICECONST x1_
	STSLICE
	PUSHINT 2803819077499249229031122585109857988247553
	STUR 143
	ROTREV
	NEWC
	STSLICECONST x2c0269fd
	STU 32
	STSLICE
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
	.loc ../contracts/AuctionTip3.sol, 321
	PUSHREF {
	}
	.loc ../contracts/AuctionTip3.sol, 322
	PUSHINT 10000000
	OVER
	PAIR
	PUSH S4
	GETGLOB 25
	FIRST
	XCHG S2
	CALLREF {
		UNPAIR
		SWAP
		NEWC
		STU 128
		STREF
	}
	ROTREV
	PUSHINT 267
	DICTSETB
	POP S4
	.loc ../contracts/AuctionTip3.sol, 324
	PUSH2 S3, S5
	GETGLOB 25
	FIRST
	GETGLOB 11
	FALSE
	NEWC
	STSLICECONST x6_
	STI 1
	STSLICECONST x1_
	STSLICE
	PUSHINT 1
	STUR 111
	ROLLREV 3
	NEWC
	STSLICECONST x11dd9e92
	STSLICE
	ROTREV
	NEWC
	STSLICE
	STDICT
	STBREFR
	STBREFR
	ENDC
	PUSHPOW2 7
	SENDRAWMSG
	.loc ../contracts/AuctionTip3.sol, 333
	SWAP
	GETGLOB 15
	PUSH S6
	GETGLOB 19
	PUSHINT 300000000
	PUSHINT 1
	PUSHINT 120000000
	PUSH S7
	CALLREF {
		CALL $_transfer_internal_macro$
	}
	.loc ../contracts/AuctionTip3.sol, 335
	OVER
	GTINT 0
	PUSHCONT {
		.loc ../contracts/AuctionTip3.sol, 336
		GETGLOB 18
		PUSH S2
		PUSHSLICE xc0000000000000000000000000677bf5e3
		NEWC
		STSLICE
		STU 128
		STSLICE
		ENDC
		PUSHINT 0
		SENDRAWMSG
		.loc ../contracts/AuctionTip3.sol, 337
		DUP
		FALSE
		PUSH S6
		PUSHINT 100000000
		GETGLOB 12
		PUSH S6
		PUSHINT 100000000
		DUP
		ADD
		UFITS 128
		GETGLOB 19
		FALSE
		NEWC
		STSLICECONST x6_
		STI 1
		STSLICECONST x1_
		STSLICE
		SWAP
		STGRAMS
		PUSHINT 1
		STUR 107
		ROLLREV 6
		NEWC
		STSLICECONST x73e22143
		STU 128
		STSLICE
		STU 128
		ROLLREV 3
		NEWC
		STSLICE
		STI 1
		STREF
		STBREFR
		STBREFR
		ENDC
		PUSHINT 0
		SENDRAWMSG
		.loc ../contracts/AuctionTip3.sol, 0
	}
	IF
	.loc ../contracts/AuctionTip3.sol, 0
	DROP2
}
PUSHCONT {
	.loc ../contracts/AuctionTip3.sol, 352
	PUSHREF {
		.blob xc00000000000000000000000001b73c2e5
	}
	PUSHINT 0
	SENDRAWMSG
	.loc ../contracts/AuctionTip3.sol, 353
	PUSHINT 3
	SETGLOB 28
	.loc ../contracts/AuctionTip3.sol, 354
	GETGLOB 11
	PUSH S2
	GETGLOB 9
	FALSE
	NEWC
	STSLICECONST x6_
	STI 1
	STSLICECONST x1_
	STSLICE
	PUSHINT 2803819077499249229031122585109857988247553
	STUR 143
	ROTREV
	NEWC
	STSLICECONST x21b2a9d1
	STU 32
	STSLICE
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
	.loc ../contracts/AuctionTip3.sol, 362
	PUSH2 S0, S2
	GETGLOB 15
	GETGLOB 11
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 1
	STUR 111
	ROLLREV 3
	NEWC
	STSLICECONST x09158dea
	STSLICE
	ROTREV
	NEWC
	STSLICE
	STDICT
	STBREFR
	STBREFR
	ENDC
	PUSHPOW2 7
	SENDRAWMSG
	.loc ../contracts/AuctionTip3.sol, 0
}
IFELSE
BLKDROP 3
.loc ../contracts/AuctionTip3.sol, 0

.globl	calculateAndSetNextBid_internal
.type	calculateAndSetNextBid_internal, @function
CALL $calculateAndSetNextBid_internal_macro$

.macro calculateAndSetNextBid_internal_macro
.loc ../contracts/AuctionTip3.sol, 371
GETGLOB 26
DUP
GETGLOB 23
GETGLOB 24
MULDIVC
UFITS 128
ADD
UFITS 128
SETGLOB 27
.loc ../contracts/AuctionTip3.sol, 0

.globl	sendBidResultCallback_internal
.type	sendBidResultCallback_internal, @function
CALL $sendBidResultCallback_internal_macro$

.macro sendBidResultCallback_internal_macro
.loc ../contracts/AuctionTip3.sol, 381
PUSH S3
PARSEMSGADDR
INDEX 3
PLDU 256
PUSHCONT {
	.loc ../contracts/AuctionTip3.sol, 382
	PUSH S2
	PUSHCONT {
		.loc ../contracts/AuctionTip3.sol, 383
		PUSH3 S0, S1, S4
		PUSH S6
		FALSE
		NEWC
		STSLICECONST x6_
		STI 1
		STSLICECONST x1_
		STSLICE
		PUSHINT 2803819077499249229031122585109857988247553
		STUR 143
		ROLLREV 3
		NEWC
		STSLICECONST x336aabe1
		STU 32
		STU 128
	}
	PUSHCONT {
		.loc ../contracts/AuctionTip3.sol, 393
		PUSH3 S0, S4, S3
		FALSE
		NEWC
		STSLICECONST x6_
		STI 1
		STSLICECONST x1_
		STSLICE
		PUSHINT 2803819077499249229031122585109857988247553
		STUR 143
		ROTREV
		NEWC
		STSLICECONST x2de2b771
		STU 32
	}
	IFELSE
	STSLICE
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
	.loc ../contracts/AuctionTip3.sol, 0
}
IF
.loc ../contracts/AuctionTip3.sol, 0
BLKDROP 5

.macro buildPlaceBidPayload
DROP
GETGLOB 6
THROWIFNOT 76
.loc ../contracts/AuctionTip3.sol, 405
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
OVER
PUSHCONT {
	LDU 32
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDU 32
}
IFELSE
LDMSGADDR
ENDS
.loc ../contracts/AuctionTip3.sol, 0
CALLREF {
	CALL $buildPlaceBidPayload_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3010071024
	STUR 130
	STREF
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	STREF
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro buildPlaceBidPayload_internal_macro
.loc ../contracts/AuctionTip3.sol, 410
SWAP
NEWC
STU 32
.loc ../contracts/AuctionTip3.sol, 411
STSLICE
.loc ../contracts/AuctionTip3.sol, 412
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
ENDC
.loc ../contracts/AuctionTip3.sol, 0

.macro getInfo
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/AuctionTip3.sol, 415
ENDS
.loc ../contracts/AuctionTip3.sol, 0
CALLREF {
	CALL $getInfo_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST x8cf28e87
	SWAP
	UNTUPLE 10
	REVERSE 11, 0
	STSLICE
	ROLLREV 9
	NEWC
	STSLICE
	ROLLREV 8
	NEWC
	STSLICE
	ROLLREV 7
	NEWC
	STSLICE
	STU 64
	STU 64
	STU 64
	STU 128
	STU 64
	STU 8
	STBREFR
	STBREFR
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getInfo_internal_macro
.loc ../contracts/AuctionTip3.sol, 416
CALL $buildInfo_internal_macro$
.loc ../contracts/AuctionTip3.sol, 0

.globl	buildInfo_internal
.type	buildInfo_internal, @function
CALL $buildInfo_internal_macro$

.macro buildInfo_internal_macro
.loc ../contracts/AuctionTip3.sol, 420
GETGLOB 11
GETGLOB 15
GETGLOB 18
GETGLOB 19
GETGLOB 20
GETGLOB 21
GETGLOB 22
GETGLOB 13
GETGLOB 10
GETGLOB 28
TUPLE 10
.loc ../contracts/AuctionTip3.sol, 0

.macro upgrade
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/AuctionTip3.sol, 434
OVER
PUSHCONT {
	LDREF
	LDU 32
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDREF
	LDU 32
}
IFELSE
LDMSGADDR
ENDS
.loc ../contracts/AuctionTip3.sol, 0
CALLREF {
	CALL $upgrade_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro upgrade_internal_macro
.loc ../contracts/abstract/Offer.sol, 54
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
GETGLOB 9
GETGLOB 12
SDEQ
AND
THROWIFNOT 202
.loc ../contracts/AuctionTip3.sol, 439
GETGLOB 29
ROT
EQUAL
PUSHCONT {
	.loc ../contracts/AuctionTip3.sol, 440
	CALLREF {
		CALL $_reserve_internal_macro$
	}
	.loc ../contracts/AuctionTip3.sol, 441
	DUP
	NEWC
	STSLICECONST x42_
	STSLICE
	PUSHINT 111
	STZEROES
	ENDC
	PUSHINT 130
	SENDRAWMSG
}
PUSHCONT {
	.loc ../contracts/AuctionTip3.sol, 447
	PUSHREF {
		.blob xc00000000000000000000000005900da8c
	}
	PUSHINT 0
	SENDRAWMSG
	.loc ../contracts/AuctionTip3.sol, 449
	GETGLOB 31
	GETGLOB 30
	GETGLOB 28
	GETGLOB 19
	GETGLOB 18
	GETGLOB 27
	GETGLOB 26
	GETGLOB 25
	GETGLOB 24
	GETGLOB 23
	GETGLOB 22
	GETGLOB 20
	GETGLOB 21
	GETGLOB 17
	GETGLOB 16
	GETGLOB 15
	GETGLOB 14
	GETGLOB 12
	GETGLOB 29
	GETGLOB 13
	GETGLOB 11
	GETGLOB 10
	NEWC
	STU 64
	STSLICE
	STU 128
	STU 32
	PUSHINT 18
	ROLLREVX
	NEWC
	STSLICE
	PUSHINT 17
	ROLLREVX
	NEWC
	STSLICE
	ROLLREV 16
	NEWC
	STSLICE
	STU 128
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STU 32
	STU 64
	STU 64
	STU 64
	STU 16
	STU 16
	SWAP
	UNPAIR
	XCHG S2
	ROLLREV 9
	NEWC
	STSLICE
	STU 128
	STU 128
	STU 128
	ROLLREV 5
	NEWC
	STSLICE
	ROLLREV 4
	NEWC
	STSLICE
	STU 8
	ROTREV
	NEWC
	STSLICE
	SWAP
	NEWC
	STSLICE
	STBREFR
	STBREFR
	STBREFR
	STBREFR
	STBREFR
	STBREFR
	STBREFR
	STBREFR
	ENDC
	.loc ../contracts/AuctionTip3.sol, 474
	PUSH S2
	SETCODE
	.loc ../contracts/AuctionTip3.sol, 475
	PUSH S2
	CTOS
	DUP
	PUSHSLICE x8adb35
	SDEQ
	PUSHCONT {
		PLDREFIDX 1
		CTOS
	}
	IF
	PLDREF
	CTOS
	BLESS
	POP C3
	.loc ../contracts/AuctionTip3.sol, 477
	CALLREF {
		CALL $:onCodeUpgrade$
	}
}
IFELSE
.loc ../contracts/AuctionTip3.sol, 0
DROP2

.internal-alias :onCodeUpgrade, 2
.internal :onCodeUpgrade
DROP
.loc ../contracts/AuctionTip3.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
THROW 0

.globl	setDefaultProperties_internal
.type	setDefaultProperties_internal, @function
CALL $setDefaultProperties_internal_macro$

.macro setDefaultProperties_internal_macro
.loc ../contracts/abstract/Offer.sol, 36
ROLL 4
SETGLOB 13
.loc ../contracts/abstract/Offer.sol, 37
ROLL 3
SETGLOB 14
.loc ../contracts/abstract/Offer.sol, 38
ROT
SETGLOB 15
.loc ../contracts/abstract/Offer.sol, 39
SWAP
SETGLOB 16
.loc ../contracts/abstract/Offer.sol, 40
SETGLOB 17
.loc ../contracts/abstract/Offer.sol, 0

.macro getMarketFee
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/abstract/Offer.sol, 63
ENDS
.loc ../contracts/abstract/Offer.sol, 0
CALLREF {
	CALL $getMarketFee_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2654542275
	STUR 130
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STU 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getMarketFee_internal_macro
.loc ../contracts/abstract/Offer.sol, 64
GETGLOB 17
.loc ../contracts/abstract/Offer.sol, 0

.macro setMarketFee
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/abstract/Offer.sol, 67
OVER
PUSHCONT {
	LDU 32
	LDU 32
	ROTREV
	PAIR
	SWAP
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDU 32
	LDU 32
	ROTREV
	PAIR
	SWAP
}
IFELSE
LDMSGADDR
ENDS
.loc ../contracts/abstract/Offer.sol, 0
CALLREF {
	CALL $setMarketFee_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setMarketFee_internal_macro
.loc ../contracts/abstract/Offer.sol, 54
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
GETGLOB 9
GETGLOB 12
SDEQ
AND
THROWIFNOT 202
.loc ../contracts/abstract/Offer.sol, 68
CALLREF {
	CALL $_reserve_internal_macro$
}
.loc ../contracts/abstract/Offer.sol, 69
OVER
SECOND
GTINT 0
THROWIFNOT 110
.loc ../contracts/abstract/Offer.sol, 70
SWAP
SETGLOB 17
.loc ../contracts/abstract/Offer.sol, 71
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHINT 130
SENDRAWMSG
.loc ../contracts/abstract/Offer.sol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDU 64
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 128
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 128
LDU 32
LDU 32
ROTREV
PAIR
SWAP
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 64
LDU 64
LDU 64
LDU 16
LDU 16
LDREF
ENDS
CTOS
LDMSGADDR
LDU 128
ROTREV
PAIR
SWAP
LDU 128
LDU 128
LDU 8
OVER
GTINT 3
THROWIF 73
LDU 32
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 128
LDU 128
LDU 128
ROTREV
PAIR
SWAP
LDREF
ENDS
CTOS
LDU 128
LDU 128
ROTREV
PAIR
SWAP
LDU 128
LDU 128
ROTREV
PAIR
SWAP
LDU 128
LDU 128
ROTREV
PAIR
SWAP
LDU 128
LDREF
ENDS
CTOS
LDU 128
ROTREV
PAIR
SWAP
ROLLREV 6
TUPLE 6
SWAP
ENDS
PUSHINT 0
GETGLOBVAR
GETGLOB 1
GETGLOB 2
GETGLOB 3
GETGLOB 4
GETGLOB 5
GETGLOB 6
GETGLOB 7
GETGLOB 8
GETGLOB 9
PUSHINT 23
PUSHINT 10
BLKSWX
PUSHINT 33
TUPLEVAR
POP C7
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHINT 0
	GETGLOBVAR
	GETGLOB 1
	GETGLOB 2
	GETGLOB 3
	GETGLOB 4
	GETGLOB 5
	GETGLOB 6
	GETGLOB 7
	GETGLOB 8
	GETGLOB 9
	PUSHINT 1
	PUSH S11
	PUSHINT 64
	DICTUGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDU 64
	}
	IF
	PUSHINT 2
	PUSH S12
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PUSHREFSLICE {
			.blob x8000000000000000000000000000000000000000000000000000000000000000001_
		}
	}
	IFNOT
	PUSHINT 3
	PUSH S13
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PUSHREFSLICE {
			.blob x8000000000000000000000000000000000000000000000000000000000000000001_
		}
	}
	IFNOT
	PUSHINT 0
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	DUP
	PUSHINT 0
	BLKPUSH 2, 0
	PAIR
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	DUP
	PUSHINT 0
	BLKPUSH 4, 0
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHINT 0
	PAIR
	PUSHINT 0
	BLKPUSH 3, 0
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	DUP
	PUSHINT 0
	BLKPUSH 2, 0
	PAIR
	BLKPUSH 4, 0
	TUPLE 6
	PUSHINT 33
	TUPLEVAR
	POP C7
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
PUSH C7
FALSE
PUSHINT 33
SETINDEXVARQ
PUSHINT 34
UNTUPLEVAR
DROP
PUSHINT 33
PUSHINT 0
REVX
BLKDROP 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STU 64
STSLICE
PUSHINT 21
ROLLREVX
NEWC
STSLICE
STU 128
PUSHINT 19
ROLLREVX
NEWC
STSLICE
PUSHINT 18
ROLLREVX
NEWC
STSLICE
STU 128
SWAP
UNPAIR
XCHG S2
STU 32
STU 32
ROLLREV 15
NEWC
STSLICE
ROLLREV 14
NEWC
STSLICE
STU 64
STU 64
STU 64
STU 16
STU 16
SWAP
UNPAIR
XCHG S2
ROLLREV 9
NEWC
STSLICE
STU 128
STU 128
STU 128
STU 8
STU 32
ROLLREV 3
NEWC
STSLICE
ROTREV
NEWC
STSLICE
SWAP
UNTUPLE 6
REVERSE 7, 0
STU 128
SWAP
UNPAIR
XCHG S2
STU 128
STU 128
SWAP
UNPAIR
XCHG S2
ROLLREV 5
NEWC
STU 128
STU 128
SWAP
UNPAIR
XCHG S2
STU 128
STU 128
SWAP
UNPAIR
XCHG S2
STU 128
STU 128
SWAP
UNPAIR
XCHG S2
STU 128
SWAP
NEWC
STU 128
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
GETGLOB 4
TRUE
SETINDEXQ 1
PUSHINT 10000000
SETINDEXQ 2
NULL
SETINDEXQ 3
PUSHINT 0
SETINDEXQ 4
SETGLOB 4
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	SWAP
	LDU 1 ; signatureSlice hashMsgSlice hasPubkey msgSlice
	SWAP
	PUSHCONT {
		LDU 256 ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG S3
		SWAP
	}
	PUSHCONT {
		XCHG S2
		GETGLOB 2
	}
	IFELSE
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
PUSHCONT {
	LDU 1 ; hasPubkey msgSlice
	SWAP
	THROWIF 58
}
IFELSE
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro nft
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 11
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000e4cb3360
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro markerRootAddr
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 12
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000cc393a5c
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro price
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 13
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000e63444b3
	NEWC
	STSLICE
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro tokenRootAddr
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 14
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000b2831a8d
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro nftOwner
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 15
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000d747766d
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro deploymentFee
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 16
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000d25cb061
	NEWC
	STSLICE
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro bidDelta
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 23
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000da03c198
	NEWC
	STSLICE
	STU 16
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro bidDeltaDecimals
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 24
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000cd0a1f72
	NEWC
	STSLICE
	STU 16
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro currentBid
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 25
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000d103b030
	NEWC
	STSLICE
	SWAP
	UNPAIR
	XCHG S2
	STSLICE
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro maxBidValue
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 26
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000dfc7a9c9
	NEWC
	STSLICE
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro nextBidValue
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 27
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000dd72e52c
	NEWC
	STSLICE
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro weverVault
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 30
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000b75f660d
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro weverRoot
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 31
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000fe107c52
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro public_function_selector
DUP
PUSHINT 1611292812
LEQ
IFJMPREF {
	DUP
	PUSHINT 847452813
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 217222791
		EQUAL
		IFJMPREF {
			CALL $getInfo$
		}
		DUP
		PUSHINT 420993090
		EQUAL
		IFJMPREF {
			CALL $getTypeContract$
		}
		DUP
		PUSHINT 507058627
		EQUAL
		IFJMPREF {
			CALL $getMarketFee$
		}
		DUP
		PUSHINT 847452813
		EQUAL
		IFJMPREF {
			CALL $tokenRootAddr$
		}
	}
	DUP
	PUSHINT 1278818908
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 862587376
		EQUAL
		IFJMPREF {
			CALL $buildPlaceBidPayload$
		}
		DUP
		PUSHINT 928998925
		EQUAL
		IFJMPREF {
			CALL $weverVault$
		}
		DUP
		PUSHINT 1236465367
		EQUAL
		IFJMPREF {
			CALL $onTokenWallet$
		}
		DUP
		PUSHINT 1278818908
		EQUAL
		IFJMPREF {
			CALL $markerRootAddr$
		}
	}
	DUP
	PUSHINT 1464301165
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1292509042
		EQUAL
		IFJMPREF {
			CALL $bidDeltaDecimals$
		}
		DUP
		PUSHINT 1359196208
		EQUAL
		IFJMPREF {
			CALL $currentBid$
		}
		DUP
		PUSHINT 1381806177
		EQUAL
		IFJMPREF {
			CALL $deploymentFee$
		}
		DUP
		PUSHINT 1464301165
		EQUAL
		IFJMPREF {
			CALL $nftOwner$
		}
	}
	DUP
	PUSHINT 1611292812
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1510195608
		EQUAL
		IFJMPREF {
			CALL $bidDelta$
		}
		DUP
		PUSHINT 1567810860
		EQUAL
		IFJMPREF {
			CALL $nextBidValue$
		}
		DUP
		PUSHINT 1606920649
		EQUAL
		IFJMPREF {
			CALL $maxBidValue$
		}
		DUP
		PUSHINT 1611292812
		EQUAL
		IFJMPREF {
			CALL $finishAuction$
		}
	}
}
DUP
PUSHINT 2115009618
LEQ
IFJMPREF {
	DUP
	PUSHINT 1714701491
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1611811351
		EQUAL
		IFJMPREF {
			CALL $setMarketFee$
		}
		DUP
		PUSHINT 1688565960
		EQUAL
		IFJMPREF {
			CALL $upgrade$
		}
		DUP
		PUSHINT 1691038560
		EQUAL
		IFJMPREF {
			CALL $nft$
		}
		DUP
		PUSHINT 1714701491
		EQUAL
		IFJMPREF {
			CALL $price$
		}
	}
	DUP
	PUSHINT 2115009618
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1745391003
		EQUAL
		IFJMPREF {
			CALL $onAcceptTokensBurn$
		}
		DUP
		PUSHINT 1893244873
		EQUAL
		IFJMPREF {
			CALL $onAcceptTokensTransfer$
		}
		DUP
		PUSHINT 2043186091
		EQUAL
		IFJMPREF {
			CALL $constructor$
		}
		DUP
		PUSHINT 2115009618
		EQUAL
		IFJMPREF {
			CALL $weverRoot$
		}
	}
}

